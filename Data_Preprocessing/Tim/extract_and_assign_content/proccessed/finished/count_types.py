import os, sys

labels = ["Natural disaster", "Censorship", "Network attacks", "Maintenance",\
"Device failure", "Fiber cut", "Power outage", "Server",\
"Operator error mistakes", "Routing", "Congestion",\
"DNS resolution", "Mobile data network", "Unknown"]

def printTypesForEachYear(name, array):
	for index in range(15):
		if index == 0:
			continue
		print str(name) +" has " + labels[index-1] + " = " + str(array.count(index))

dataset = [13, 14, 6, 13, 13, 1, 14, 14, 7, 6, 6, 14, 1, 4, 3, 11, 6, 6, 14, 10, 14, 14, 10, 10, 7, 4, 4, 7, 3, 3, 12, 7, 4, 4, 3, 14, 14, 4, 14, 1, 13, 1, 14, 7, 1, 10, 6, 6, 6, 1, 1, 8, 6, 6, 6, 14, 11, 11, 9, 6, 5, 11, 10, 14, 1, 6, 10, 10, 8, 3, 3, 4, 4, 4, 4, 4, 4, 4, 14, 14, 4, 10, 6, 8, 11, 4, 4, 4, 4, 4, 6, 6, 10, 1, 10, 10, 4, 4, 4, 4, 4, 6, 4, 4, 4, 4, 6, 7, 10, 6, 11, 10, 13, 4, 4, 4, 4, 4, 4, 4, 10, 10, 10, 4, 5, 13, 10, 14, 5, 4, 10, 4, 4, 4, 4, 4, 4, 4, 13, 5, 11, 4, 4, 4, 4, 10, 10, 10, 6, 1, 6, 6, 6, 10, 3, 4, 10, 2, 2, 2, 2, 9, 9, 9, 9, 10, 4, 4, 10, 10, 6, 4, 6, 7, 4, 4, 4, 10, 1, 6, 4, 4, 4, 4, 4, 6, 4, 6, 4, 4, 4, 4, 4, 4, 4, 8, 10, 4, 4, 4, 4, 4, 4, 4, 10, 10, 4, 4, 4, 4, 10, 4, 4, 7, 4, 6, 7, 7, 5, 6, 4, 6, 10, 10, 4, 8, 7, 11, 4, 4, 13, 13, 10, 14, 10, 13, 13, 4, 4, 4, 4, 4, 4, 14, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 4, 4, 4, 4, 4, 12, 10, 4, 1, 1, 4, 6, 6, 6, 10, 6, 6, 6, 6, 6, 6, 5, 10, 10, 8, 3, 10, 8, 10, 10, 12, 10, 10, 13, 6, 14, 1, 10, 6, 10, 6, 14, 2, 2, 2, 2, 9, 9, 9, 13, 10, 13, 13, 13, 14, 6, 7, 6, 6, 6, 14, 14, 14, 4, 13, 13, 14, 14, 13, 4, 11, 10, 4, 14, 14, 4, 14, 4, 4, 7, 4, 6, 4, 4, 14, 13, 4, 4, 4, 13, 13, 13, 14, 4, 4, 4, 4, 4, 4, 14, 10, 10, 6, 6, 14, 10, 14, 4, 13, 14, 4, 4, 14, 10, 4, 13, 13, 13, 14, 10, 4, 4, 10, 13, 14, 10, 4, 13, 13, 14, 10, 13, 4, 13, 4, 4, 10, 10, 10, 4, 10, 4, 4, 4, 13, 13, 13, 4, 4, 10, 13, 13, 10, 4, 4, 13, 13, 13, 4, 13, 4, 4, 13, 4, 13, 4, 13, 13, 4, 6, 6, 13, 4, 4, 4, 13, 13, 10, 13, 4, 4, 13, 4, 13, 13, 13, 13, 14, 13, 13, 4, 13, 13, 6, 14, 13, 4, 13, 4, 10, 10, 7, 14, 13, 13, 10, 6, 10, 10, 6, 13, 10, 10, 4, 13, 14, 6, 10, 13, 14, 13, 10, 10, 13, 10, 10, 13, 13, 13, 4, 13, 14, 13, 13, 4, 6, 13, 13, 13, 13, 10, 13, 10, 14, 14, 1, 14, 13, 4, 4, 13, 4, 6, 14, 4, 10, 13, 13, 13, 13, 13, 7, 10, 4, 13, 4, 14, 13, 13, 7, 14, 13, 4, 10, 13, 14, 13, 7, 13, 13, 13, 10, 13, 13, 4, 13, 4, 4, 13, 13, 13, 13, 13, 13, 13, 13, 6, 13, 13, 7, 13, 10, 10, 10, 10, 6, 10, 10, 14, 14, 4, 10, 4, 14, 14, 14, 13, 4, 4, 13, 13, 13, 13, 13, 4, 10, 4, 13, 13, 6, 6, 10, 14, 14, 13, 13, 13, 13, 14, 4, 4, 13, 14, 13, 13, 13, 13, 13, 13, 10, 14, 4, 13, 10, 4, 14, 6, 13, 13, 13, 4, 4, 6, 13, 14, 14, 4, 10, 10, 13, 10, 6, 4, 13, 1, 14, 13, 13, 13, 14, 13, 13, 4, 7, 13, 13, 8, 4, 13, 13, 13, 7, 13, 6, 13, 4, 4, 13, 13, 13, 10, 13, 13, 10, 10, 13, 13, 11, 13, 4, 13, 13, 10, 4, 14, 14, 13, 13, 13, 13, 10, 13, 6, 6, 6, 13, 4, 13, 4, 4, 6, 4, 10, 4, 4, 14, 4, 13, 10, 13, 13, 13, 13, 13, 4, 14, 7, 7, 4, 6, 13, 13, 13, 4, 6, 10, 13, 13, 14, 4, 13, 13, 10, 14, 13, 13, 4, 13, 13, 13, 13, 13, 10, 13, 10, 4, 4, 10, 7, 4, 10, 10, 13, 14, 10, 4, 4, 13, 13, 10, 13, 4, 13, 13, 13, 13, 14, 13, 13, 6, 13, 10, 8, 4, 10, 13, 13, 14, 10, 13, 4, 13, 13, 13, 10, 13, 13, 13, 13, 13, 14, 4, 13, 4, 13, 13, 13, 13, 13, 4, 14, 4, 4, 13, 14, 4, 13, 13, 6, 10, 13, 4, 11, 13, 7, 6, 10, 13, 4, 13, 13, 13, 13, 4, 13, 10, 4, 13, 13, 13, 11, 10, 10, 13, 10, 4, 13, 10, 13, 4, 13, 4, 6, 13, 13, 13, 14, 4, 13, 6, 4, 14, 13, 10, 4, 13, 13, 10, 10, 4, 10, 14, 10, 13, 13, 7, 13, 13, 10, 4, 4, 13, 7, 14, 13, 7, 13, 4, 4, 13, 14, 14, 13, 4, 10, 4, 6, 14, 10, 13, 10, 13, 13, 7, 14, 4, 13, 13, 14, 13, 13, 4, 4, 13, 14, 13, 6, 10, 13, 10, 14, 4, 13, 14, 10, 13, 14, 7, 13, 6, 10, 6, 10, 10, 13, 6, 14, 4, 10, 13, 13, 10, 6, 13, 13, 13, 13, 13, 13, 14, 13, 14, 4, 14, 4, 13, 4, 10, 14, 13, 13, 13, 4, 13, 13, 13, 13, 10, 13, 13, 6, 6, 14, 14, 13, 10, 13, 4, 10, 8, 4, 13, 13, 4, 13, 7, 10, 1, 4, 4, 13, 13, 4, 13, 13, 13, 13, 13, 10, 13, 4, 13, 13, 7, 13, 7, 6, 13, 14, 13, 10, 10, 14, 13, 4, 13, 10, 7, 4, 13, 14, 13, 13, 13, 13, 13, 13, 4, 4, 10, 14, 13, 13, 13, 4, 10, 13, 4, 6, 14, 11, 10, 13, 13, 13, 4, 7, 13, 13, 13, 13, 10, 13, 4, 6, 4, 13, 4, 13, 13, 13, 13, 7, 4, 13, 10, 13, 6, 4, 10, 13, 13, 6, 13, 13, 13, 13, 13, 13, 13, 3, 13, 13, 13, 13, 10, 11, 13, 4, 13, 4, 10, 1, 1, 7, 10, 10, 10, 4, 10, 13, 13, 10, 13, 13, 13, 4, 4, 4, 13, 4, 7, 10, 13, 13, 6, 13, 13, 13, 13, 13, 4, 10, 13, 13, 13, 13, 6, 6, 10, 13, 10, 13, 13, 10, 13, 13, 13, 13, 13, 10, 7, 10, 7, 6, 4, 13, 13, 4, 13, 10, 4, 13, 4, 13, 13, 10, 13, 13, 13, 13, 10, 13, 13, 4, 8, 13, 13, 13, 13, 13, 13, 13, 4, 13, 13, 7, 10, 10, 13, 13, 14, 13, 4, 13, 6, 13, 13, 14, 13, 10, 13, 13, 13, 4, 13, 13, 13, 13, 4, 13, 13, 13, 3, 6, 13, 10, 13, 4, 13, 11, 13, 13, 13, 6, 10, 13, 13, 13, 10, 6, 7, 13, 13, 13, 6, 4, 13, 6, 13, 13, 4, 13, 13, 13, 13, 4, 13, 13, 13, 14, 13, 4, 14, 13, 10, 7, 13, 13, 13, 13, 10, 14, 10, 10, 13, 13, 13, 13, 10, 13, 13, 13, 13, 13, 13, 10, 13, 4, 4, 4, 13, 13, 10, 10, 13, 13, 10, 13, 13, 13, 13, 4, 13, 13, 14, 13, 13, 13, 6, 4, 14, 13, 13, 13, 13, 13, 10, 4, 14, 6, 14, 4, 13, 4, 13, 1, 13, 6, 6, 13, 13, 13, 4, 6, 10, 13, 13, 13, 6, 13, 8, 13, 13, 13, 13, 14, 10, 11, 14, 6, 13, 10, 13, 4, 13, 13, 13, 13, 14, 13, 10, 10, 13, 13, 10, 13, 13, 13, 10, 13, 10, 4, 14, 10, 10, 14, 6, 13, 13, 6, 13, 5, 6, 13, 10, 13, 13, 13, 1, 13, 13, 4, 4, 4, 13, 13, 4, 10, 13, 7, 13, 13, 13, 13, 6, 13, 14, 4, 10, 10, 13, 4, 13, 13, 13, 13, 7, 13, 13, 4, 10, 13, 13, 13, 13, 4, 13, 13, 13, 13, 6, 13, 13, 4, 13, 14, 13, 14, 10, 10, 13, 8, 4, 13, 4, 13, 13, 13, 13, 10, 13, 4, 5, 13, 10, 13, 4, 13, 10, 10, 13, 13, 13, 4, 13, 13, 13, 13, 4, 13, 4, 7, 13, 10, 13, 13, 4, 13, 14, 13, 6, 13, 7, 4, 10, 6, 10, 10, 13, 13, 13, 6, 4, 13, 14, 13, 13, 13, 13, 14, 11, 10, 13, 13, 10, 13, 13, 13, 13, 4, 13, 13, 13, 13, 10, 13, 13, 13, 13, 10, 4, 13, 13, 13, 13, 13, 14, 13, 10, 14, 13, 4, 13, 4, 13, 7, 4, 13, 13, 4, 13, 13, 13, 10, 4, 13, 13, 10, 13, 13, 13, 13, 4, 10, 10, 5, 13, 4, 13, 13, 10, 13, 4, 13, 13, 13, 13, 13, 13, 13, 7, 13, 6, 13, 4, 6, 10, 4, 13, 13, 10, 14, 13, 14, 7, 4, 13, 4, 13, 13, 13, 13, 4, 10, 13, 13, 4, 13, 4, 4, 4, 7, 13, 13, 13, 4, 8, 10, 13, 13, 10, 6, 13, 4, 13, 13, 13, 6, 4, 4, 13, 14, 13, 10, 13, 13, 13, 13, 10, 13, 13, 13, 4, 13, 13, 13, 13, 13, 14, 14, 6, 4, 13, 4, 7, 10, 13, 7, 13, 13, 13, 4, 11, 13, 6, 13, 13, 10, 14, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 8, 13, 13, 13, 6, 13, 13, 13, 10, 4, 13, 4, 13, 4, 13, 10, 13, 11, 10, 4, 10, 13, 13, 13, 13, 13, 8, 13, 13, 10, 13, 13, 13, 13, 13, 6, 13, 13, 13, 13, 4, 10, 13, 10, 13, 10, 14, 4, 13, 10, 13, 4, 14, 10, 13, 1, 4, 13, 13, 13, 6, 4, 11, 13, 13, 4, 13, 13, 13, 13, 13, 13, 13, 14, 13, 4, 7, 13, 4, 13, 13, 13, 13, 4, 13, 13, 4, 10, 4, 4, 10, 10, 13, 13, 4, 13, 10, 6, 4, 13, 13, 10, 10, 4, 13, 13, 4, 13, 13, 6, 13, 13, 13, 13, 13, 13, 4, 13, 13, 13, 4, 13, 6, 13, 10, 14, 13, 13, 13, 13, 13, 10, 13, 13, 4, 10, 13, 13, 14, 10, 13, 4, 4, 13, 13, 8, 13, 13, 13, 13, 13, 4, 13, 7, 13, 4, 14, 13, 6, 6, 13, 7, 13, 14, 13, 13, 13, 13, 6, 14, 4, 14, 14, 13, 10, 10, 13, 13, 13, 10, 13, 13, 13, 13, 4, 7, 13, 13, 13, 13, 14, 13, 13, 13, 14, 4, 13, 13, 13, 13, 8, 8, 13, 14, 6, 8, 4, 4, 13, 13, 13, 4, 13, 13, 6, 6, 6, 13, 13, 10, 13, 13, 13, 13, 10, 4, 14, 10, 14, 4, 7, 13, 13, 13, 13, 4, 13, 13, 13, 13, 11, 10, 10, 4, 13, 14, 4, 10, 13, 13, 6, 14, 13, 4, 13, 7, 5, 4, 13, 7, 7, 10, 11, 7, 13, 13, 14, 13, 14, 13, 14, 13, 6, 7, 13, 6, 6, 13, 13, 13, 13, 13, 13, 4, 10, 4, 6, 13, 14, 6, 13, 6, 13, 13, 13, 13, 13, 13, 10, 4, 10, 10, 13, 14, 13, 10, 14, 13, 10, 4, 13, 10, 4, 13, 10, 13, 4, 13, 10, 13, 8, 6, 13, 13, 7, 4, 4, 4, 10, 13, 4, 6, 13, 13, 10, 14, 13, 13, 14, 13, 6, 6, 13, 10, 13, 4, 14, 4, 13, 13, 7, 6, 13, 4, 13, 13, 4, 10, 13, 6, 13, 6, 11, 13, 13, 13, 4, 10, 13, 13, 13, 6, 14, 13, 4, 13, 13, 6, 13, 10, 13, 4, 10, 13, 13, 13, 13, 13, 14, 13, 13, 7, 13, 13, 4, 13, 13, 14, 13, 13, 13, 4, 4, 13, 13, 10, 4, 13, 10, 14, 13, 13, 7, 13, 7, 13, 14, 10, 13, 10, 13, 13, 13, 6, 13, 13, 4, 6, 13, 10, 10, 13, 10, 13, 13, 4, 4, 13, 13, 13, 4, 3, 14, 4, 14, 6, 8, 13, 4, 8, 13, 3, 3, 6, 10, 14, 10, 13, 14, 13, 3, 4, 6, 8, 13, 13]
data2006=[]
data2007=[]
data2008=[]
data2009=[]
data2010=[]
data2011=[]
data2012=[]
data2013=[]
data2014=[]
data2015=[]
count = 0
print("total dataset = " + str(len(dataset)))
for index in range(len(dataset)):
	if index < 53:
		data2006.append(dataset[index])
	if index >= 53 and index <= 156:
		data2007.append(dataset[index])
	if index == 157 or index == 158:
		data2011.append(dataset[index])
	if index == 159:
		data2010.append(dataset[index])
	if index == 160:
		data2012.append(dataset[index])
	if index == 161 or index == 162 or index == 163:
		data2008.append(dataset[index])
	if index == 164:
		data2009.append(dataset[index])
	if index >= 165 and index < 274:
		data2007.append(dataset[index])
	if index >= 274 and index < 282:
		data2008.append(dataset[index])
	if index >= 282 and index < 305:
		data2012.append(dataset[index])
	if index == 305:
		data2011.append(dataset[index])
	if index == 306:
		data2008.append(dataset[index])
	if index == 307:
		data2009.append(dataset[index])
	if index == 308:
		data2010.append(dataset[index])
	if index == 309:
		data2013.append(dataset[index])
	if index >= 310 and index < 431:
		data2008.append(dataset[index])
	if index >= 431 and index < 610:
		data2009.append(dataset[index])
	if index >= 610 and index < 865:
		data2010.append(dataset[index])
	if index >= 865 and index < 1179:
		data2011.append(dataset[index])
	if index >= 1179 and index < 1482:
		data2012.append(dataset[index])
	if index >= 1482 and index < 1856:
		data2013.append(dataset[index])
	if index >= 1856 and index < 2047:
		data2014.append(dataset[index])
	if index >= 2047 and index < 2102:
		data2015.append(dataset[index])


printTypesForEachYear(2015, data2015)
printTypesForEachYear(2014, data2014)
printTypesForEachYear(2013, data2013)
printTypesForEachYear(2012, data2012)
printTypesForEachYear(2011, data2011)
printTypesForEachYear(2010, data2010)
printTypesForEachYear(2009, data2009)
printTypesForEachYear(2008, data2008)
printTypesForEachYear(2007, data2007)
printTypesForEachYear(2006, data2006)




